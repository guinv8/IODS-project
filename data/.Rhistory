View(student_mat)
library(readr)
student_por <- read_csv("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data/student-por.csv")
View(student_por)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by)
math <- student_mat
por <- student_por
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by)
colnames(math)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by)
library(dplyr)
join_by <- c(school,sex,age,address,famsize,Pstatus,Medu,Fedu,Mjob,Fjob,reason,nursery,internet)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by)
math <- student_mat
por <- student_por
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by)
View(math)
View(por)
math_por <- inner_join(math, por, by = join_by)
join_by <- c('school',"sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by)
read.csv(student_mat)
read.csv(student-mat.csv)
d1=read.table("student-mat.csv",sep=";",header=TRUE)
math <-  read.csv("C:\Users\Guilherme\Desktop\University of Helsinki\2016-2017\Period 2\Term 3\Open Data Science\IODS-project\data\student-mat.csv", header = TRUE, sep=";")
math <-  read.csv(C:\Users\Guilherme\Desktop\University of Helsinki\2016-2017\Period 2\Term 3\Open Data Science\IODS-project\data\student-mat.csv", header = TRUE, sep=";")
por <-  read.csv("C:\Users\Guilherme\Desktop\University of Helsinki\2016-2017\Period 2\Term 3\Open Data Science\IODS-project\data\student-por.csv", header = TRUE, sep=";")
math <-  read.csv("C:\Users\Guilherme\Desktop\University of Helsinki\2016-2017\Period 2\Term 3\Open Data Science\IODS-project\data\student-mat.csv", header = TRUE, sep=";")
math <-  read.csv("C:\Users\Guilherme\Documents\GitHub\data\student-mat.csv", header = TRUE, sep=";")
library(readr)
student_mat <- read_delim("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data/student-mat.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(student_mat)
library(readr)
student_por <- read_delim("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data/student-por.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(student_por)
math <- student_mat
por < - student_por
por <- student_por
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
innerjoin_math_por <- inner_join(math, por, by= join_by, suffix= c(".math", ".por"))
colnames(innerjoin_math_por)
str(innerjoin_math_por)
dim(innerjoin_math_por)
alc <- select(innerjoin_math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(innerjoin_math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
glimpse(alc)
write.csv("C:\Users\Guilherme\Desktop\University of Helsinki\2016-2017\Period 2\Term 3\Open Data Science\IODS-project\data", row.names(FALSE))
data(alc)
setwd("~/")
View(alc)
setwd("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data")
write.table(alc,file="alc.txt")
library(readr)
alc <- read_delim("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data/alc.txt",
" ", escape_double = FALSE, trim_ws = TRUE)
View(alc)
View(alc)
data(alc)
alc
dim(alc)
data(alc)
str(alc)
dim(alc)
str(alc)
write.csv(alc, file = alc.csv, row.names = FALSE)
write.csv(alc, file = "C:\Users\Guilherme\Desktop\University of Helsinki\2016-2017\Period 2\Term 3\Open Data Science\IODS-project\data\alc.csv", row.names = FALSE)
write.csv(alc, alc.csv)
write.csv(alc, alc.txt)
glimpse (alc)
write.csv(alc, alc.txt)
"Data wrangling exercise 3 - Guilherme Varro . 7th of february, 2017."
"Data SOURCE Alcohol consumption"
math <- student_mat
por <- student_por
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
innerjoin_math_por <- inner_join(math, por, by= join_by, suffix= c(".math", ".por"))
colnames(innerjoin_math_por)
str(innerjoin_math_por)
dim(innerjoin_math_por)
alc <- select(innerjoin_math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(innerjoin_math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
glimpse(alc)
#Create alcohol usage + hgh alcohol usage to alcohol consumption data
library(ggplot2)
alc <- mutate(alc, alc_use= (Dalc + Walc)/2)
alc <- mutate(alc, high_use = (alc_use) > 2)
glimpse (alc)
write.csv(alc, alc.txt)
math <- student_mat
por <- student_por
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
innerjoin_math_por <- inner_join(math, por, by= join_by, suffix= c(".math", ".por"))
math <- student_mat
por <- student_por
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
innerjoin_math_por <- inner_join(math, por, by= join_by, suffix= c(".math", ".por"))
colnames(innerjoin_math_por)
str(innerjoin_math_por)
dim(innerjoin_math_por)
alc <- select(innerjoin_math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(innerjoin_math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
glimpse(alc)
library(ggplot2)
alc <- mutate(alc, alc_use= (Dalc + Walc)/2)
alc <- mutate(alc, high_use = (alc_use) > 2)
glimpse (alc)
write.table(alc, alc.txt)
write.table(alc, "alc.txt")
alc
dim(alc)
str(alc)
LIBRARY(ggplot2)
library(dplyr)
library(ggplot2)
g1 <- ggplot(alc2016, aes(x = high_use, y = studytime, col=sex))
g1 <- ggplot(alc, aes(x = high_use, y = studytime, col=sex))
g2 <- g1 + geom_boxplot() + ggtitle("Graph 1 - Studytime X high use of alcohol and gender")
g2
h1 <- ggplot(alc, aes( x= high_use, y= famrel, col= sex))
h2 <- h1 + geom_boxplot()+ ylab("family relations")
h3 <- h2 + ggtitle("Graph 2 - Family relationship X alcohol consumption")
h3
View(alc)
i1 <- ggplot(alc, aes( x= high_use, y= guardian, col= sex))
i2 <- i1 + geom_boxplot()+ ylab("guardian")
i3 <- i2 + ggtitle("Graph 2 - High Use X Guardian")
i3
alc
dim(alc)
str(alc)
i1 <- ggplot(alc, aes( x= high_use, y= freetime, col= sex))
i2 <- i1 + geom_boxplot()+ ylab("freetime")
i3 <- i2 + ggtitle("Graph 2 - High Use X Free Time")
i3
library(dplyr)
library(ggplot2)
g1 <- ggplot(alc, aes(x = high_use, y = studytime, col=sex))
g2 <- g1 + geom_boxplot() + ggtitle("Graph 1 - Studytime X high use of alcohol")
g2
h1 <- ggplot(alc, aes( x= high_use, y= famrel, col= sex))
h2 <- h1 + geom_boxplot()+ ylab("family relations")
h3 <- h2 + ggtitle("Graph 2 - Family relationship X alcohol consumption")
h3
i1 <- ggplot(alc, aes( x= high_use, y= famsup, col= sex))
i2 <- i1 + geom_boxplot()+ ylab("family support")
i3 <- i2 + ggtitle("Graph 2 - High Use X Family Support")
i3
i1 <- ggplot(alc, aes( x= high_use, y= freetime, col= sex))
i2 <- i1 + geom_boxplot()+ ylab("freetime")
i3 <- i2 + ggtitle("Graph 2 - High Use X Free Time")
i3
m1 <- glm(high_use ~ freetime + famrel + sex + studytime, data = alc, family = "binomial")
summary(m1)
coef(m1)
probabilities <- predict(m2, type = "response")
probabilities <- predict(m1, type = "response")
alc2016 <- mutate(alc, probability = probabilities)
alc2016 <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
probabilities <- predict(m1, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
graphp <- ggplot(alc, aes(x = probability, y = high_use, col=prediction))
graphp+ geom_point()
graphp <- ggplot(alc, aes(x = probability, y = high_use, col=prediction))
graphp+ geom_point()
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table()%>%addmargins()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
alc
dim(alc)
str(alc)
coef(m1)
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table()%>%addmargins()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
data(alc)
setwd("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data")
data()
data(alc)
setwd("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data")
data(alc)
write.table(alc, "alc.txt")
math <- student_mat
por <- student_por
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
innerjoin_math_por <- inner_join(math, por, by= join_by, suffix= c(".math", ".por"))
colnames(innerjoin_math_por)
str(innerjoin_math_por)
dim(innerjoin_math_por)
alc <- select(innerjoin_math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(innerjoin_math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
glimpse(alc)
#Create alcohol usage + hgh alcohol usage to alcohol consumption data
library(ggplot2)
alc <- mutate(alc, alc_use= (Dalc + Walc)/2)
alc <- mutate(alc, high_use = (alc_use) > 2)
glimpse (alc)
write.table(alc, "alc.txt")
data(alc)
dim(alc)
str(alc)
data(alc)
dim(alc)
str(alc)
library(dplyr)
library(ggplot2)
g1 <- ggplot(alc, aes(x = high_use, y = studytime, col=sex))
g2 <- g1 + geom_boxplot() + ggtitle("Graph 1 - Studytime X high use of alcohol")
g2
h1 <- ggplot(alc, aes( x= high_use, y= famrel, col= sex))
h2 <- h1 + geom_boxplot()+ ylab("family relations")
h3 <- h2 + ggtitle("Graph 2 - Family relationship X alcohol consumption")
h3
i1 <- ggplot(alc, aes( x= high_use, y= freetime, col= sex))
i2 <- i1 + geom_boxplot()+ ylab("freetime")
i3 <- i2 + ggtitle("Graph 2 - High Use X Free Time")
i3
m1 <- glm(high_use ~ freetime + famrel + sex + studytime, data = alc, family = "binomial")
summary(m1)
coef(m1)
probabilities <- predict(m1, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
graphp <- ggplot(alc, aes(x = probability, y = high_use, col=prediction))
graphp+ geom_point()
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table()%>%addmargins()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
alc
dim(alc)
str(alc)
data(learning2014)
data(alc)
library(readr)
alc <- read_delim("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data/alc.txt",
" ", escape_double = FALSE, trim_ws = TRUE)
View(alc)
data(alc)
data(alc)
View(alc)
load("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data/alc.txt")
data(alc)
data(create_alc)
data(alc)
glimpse (alc)
write.table(alc, "alc.txt")
load("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data/create_alc.R")
data(alc)
setwd("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data")
write.table(alc, "alc.txt")
setwd("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data")
data(alc)
setwd("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data")
setwd("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data")
data(alc)
write.table(alc, "alcv2.txt")
math <- student_mat
por <- student_por
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
innerjoin_math_por <- inner_join(math, por, by= join_by, suffix= c(".math", ".por"))
colnames(innerjoin_math_por)
str(innerjoin_math_por)
dim(innerjoin_math_por)
alc <- select(innerjoin_math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(innerjoin_math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
glimpse(alc)
library(ggplot2)
alc <- mutate(alc, alc_use= (Dalc + Walc)/2)
alc <- mutate(alc, high_use = (alc_use) > 2)
glimpse (alc)
write.table(alc, "alcv2.txt")
setwd("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data")
data(alc)
dim(alc)
str(alc)
load("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data/alcv2.txt")
write.csv(alc, "alcv2.txt")
data(alc)
library(readr)
alcv2 <- read_csv("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data/alcv2.txt")
View(alcv2)
data(alcv2)
write.table(alc, "alc.csv")
setwd("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data")
write.table(alc, "alc.txt")
data(alc)
alc
dim(alc)
str(alc)
alc
read.csv(file="alc.txt",head=TRUE,sep=",")
read.csv(file="alc.txt",head=TRUE,sep=" ")
dim(alc)
str(alc)
alc <- read.csv(file="alc.txt",head=TRUE,sep=" ")
data(alc)
alc <- read.csv(file="alc.txt",head=TRUE,sep=" ")
setwd("C:/Users/Guilherme/Desktop/University of Helsinki/2016-2017/Period 2/Term 3/Open Data Science/IODS-project/data")
alc <- read.csv(file="alc.txt",head=TRUE,sep=" ")
data(alc)
data(alc2016)
data(alc)
?data
data(alc, header = TRUE, as.is=FALSE)
read.table(file="alc.txt",head=TRUE,sep=" ")
data(alc)
read.table(file="alc.txt",head=TRUE,sep=" ")
alc <- read.table(file="alc.txt",head=TRUE,sep=" ")
data(alc)
load(file="alc.txt")
source(file="alc.txt")
math <- student_mat
por <- student_por
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
innerjoin_math_por <- inner_join(math, por, by= join_by, suffix= c(".math", ".por"))
colnames(innerjoin_math_por)
str(innerjoin_math_por)
dim(innerjoin_math_por)
alc <- select(innerjoin_math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(innerjoin_math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
glimpse(alc)
#Create alcohol usage + hgh alcohol usage to alcohol consumption data
library(ggplot2)
alc <- mutate(alc, alc_use= (Dalc + Walc)/2)
alc <- mutate(alc, high_use = (alc_use) > 2)
glimpse (alc)
write.table(alc, "alc.txt")
source(file="alc.txt")
?c
alc <- readRDS("alc.txt")
alc <- readRDS("alc.ext")
?read.table
read.table("alc.txt")
data(alc)
read.table("alc.txt")
data <- read.csv(url(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt))
data <- read.csv(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt"))
alc <- read.csv(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt"))
data(alc)
alcv3 <- read.csv(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt"))
data(alcv3)
alc <- read.table(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt"))
data(alc)
alc <- read.table(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt")header = FALSE, sep = " ")
alc <- read.table(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt")header = FALSE, sep = " "))
alc <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt ", sep=",", header=TRUE)
data(alc)
dim(alc)
str(alc)
library(dplyr)
library(ggplot2)
g1 <- ggplot(alc, aes(x = high_use, y = studytime, col=sex))
g2 <- g1 + geom_boxplot() + ggtitle("Graph 1 - Studytime X high use of alcohol")
g2
h1 <- ggplot(alc, aes( x= high_use, y= famrel, col= sex))
h2 <- h1 + geom_boxplot()+ ylab("family relations")
h3 <- h2 + ggtitle("Graph 2 - Family relationship X alcohol consumption")
h3
alc <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt ", sep=",", header=TRUE)
dim(alc)
str(alc)
library(dplyr)
library(ggplot2)
g1 <- ggplot(alc, aes(x = high_use, y = studytime, col=sex))
g2 <- g1 + geom_boxplot() + ggtitle("Graph 1 - Studytime X high use of alcohol")
g2
h1 <- ggplot(alc, aes( x= high_use, y= famrel, col= sex))
h2 <- h1 + geom_boxplot()+ ylab("family relations")
h3 <- h2 + ggtitle("Graph 2 - Family relationship X alcohol consumption")
h3
i1 <- ggplot(alc, aes( x= high_use, y= freetime, col= sex))
i2 <- i1 + geom_boxplot()+ ylab("freetime")
i3 <- i2 + ggtitle("Graph 2 - High Use X Free Time")
i3
m1 <- glm(high_use ~ freetime + famrel + sex + studytime, data = alc, family = "binomial")
summary(m1)
coef(m1)
probabilities <- predict(m1, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
graphp <- ggplot(alc, aes(x = probability, y = high_use, col=prediction))
graphp+ geom_point()
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table()%>%addmargins()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
